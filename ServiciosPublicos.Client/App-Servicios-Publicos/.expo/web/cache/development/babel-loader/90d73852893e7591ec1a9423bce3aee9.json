{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\geraa\\\\Desktop\\\\App-Servicios-Publicos\\\\screens\\\\NewReportScreen.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport NewReportHeader from \"../components/NewReportHeader\";\nimport NewReportType from \"../components/NewReportType\";\nimport NewReportLocation from \"../components/NewReportLocation\";\nimport NewReportImages from \"../components/NewReportImages\";\nimport NewReportNotification from \"../components/NewReportNotification\";\nimport NewReportFinished from \"../components/NewReportFinished\";\nimport RegisterCard from \"../components/RegisterCard\";\nimport ReportSteps from \"../components/ReportSteps\";\nimport Modal from \"react-native-modal\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    WIDTH = _Dimensions$get.width,\n    HEIGHT = _Dimensions$get.height;\n\nvar NewReportScreen = function NewReportScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      screen = _useState2[0],\n      setScreen = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visibleModal = _useState4[0],\n      setVisibleModal = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      type = _useState6[0],\n      setType = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      location = _useState8[0],\n      setLocation = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      images = _useState10[0],\n      setImages = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      user = _useState12[0],\n      setUser = _useState12[1];\n\n  var _useState13 = useState({\n    street: \"\",\n    street_1: \"\",\n    street_2: \"\",\n    references: \"\",\n    neighborhood: \"\"\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      address = _useState14[0],\n      setAddress = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      sendSms = _useState16[0],\n      setSms = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      sendEmail = _useState18[0],\n      setEmail = _useState18[1];\n\n  var _renderButton = function _renderButton(text, color, onPress) {\n    return React.createElement(TouchableOpacity, {\n      onPress: onPress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: [styles.button, {\n        backgroundColor: color\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, text)));\n  };\n\n  var _renderModalContent = function _renderModalContent() {\n    return React.createElement(View, {\n      style: styles.modalContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: [styles.elementText, {\n        textAlign: \"center\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, \"\\xBFDesea registrarse para recibir actualizaciones de este reporte?\"), React.createElement(View, {\n      style: styles.modalButtons,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, _renderButton(\"Aceptar\", \"rgba(0,158,227,1)\", function () {\n      setScreen(6);\n      setVisibleModal(null);\n    }), _renderButton(\"Rechazar\", \"#CCD1D1\", function () {\n      setScreen(5);\n      setVisibleModal(null);\n    })));\n  };\n\n  var callbackFunction = function callbackFunction(childData, reportValue, reportValue2) {\n    switch (childData) {\n      case 2:\n        setType(reportValue);\n        setScreen(childData);\n        break;\n\n      case 3:\n        setLocation(reportValue);\n        setAddress(reportValue2);\n        setScreen(childData);\n        break;\n\n      case 4:\n        setImages(reportValue);\n\n        if (user === null) {\n          setVisibleModal(1);\n        } else setScreen(childData);\n\n        break;\n\n      case 5:\n        setSms(reportValue);\n        setEmail(reportValue2);\n        console.log(\"reporte creado\");\n        console.log(type);\n        console.log(location);\n        console.log(address);\n        console.log(images);\n        console.log(reportValue);\n        console.log(reportValue2);\n        setScreen(childData);\n        break;\n\n      case 10:\n        navigation.goBack();\n        break;\n    }\n  };\n\n  var callbackHeader = function callbackHeader(childData) {\n    if (screen > 1) {\n      if (screen === 6) setScreen(3);else {\n        if (screen !== 5) setScreen(screen - childData);\n      }\n    } else if (screen === 1) {\n      navigation.goBack();\n    }\n  };\n\n  var callbackRegister = function callbackRegister(childData) {\n    if (childData === null) setScreen(3);else {\n      setUser(childData);\n      setScreen(4);\n    }\n  };\n\n  var reportHeader = React.createElement(NewReportHeader, {\n    parentCallback: callbackHeader,\n    screen: screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  });\n  var reportType = React.createElement(NewReportType, {\n    parentCallback: callbackFunction,\n    typeSelected: type,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  });\n  var reportLocation = React.createElement(NewReportLocation, {\n    parentCallback: callbackFunction,\n    currentLocation: location,\n    currentAddress: address,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  });\n  var reportImages = React.createElement(NewReportImages, {\n    parentCallback: callbackFunction,\n    currentImages: images,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  });\n  var reportNotification = React.createElement(NewReportNotification, {\n    parentCallback: callbackFunction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  });\n  var reportFinished = React.createElement(NewReportFinished, {\n    parentCallback: callbackFunction,\n    title: \"Reporte creado\",\n    MessageHeader: \"\\xA1Gracias por tu reporte!\",\n    Message: \"El reporte fue creado con exito\",\n    success: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  });\n  var registerCard = React.createElement(RegisterCard, {\n    parentCallback: callbackRegister,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 22\n    }\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.headerBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, reportHeader), React.createElement(View, {\n    style: styles.stepsCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, React.createElement(ReportSteps, {\n    currentScreen: screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.reportsCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, screen === 1 ? reportType : screen === 2 ? reportLocation : screen === 3 ? reportImages : screen === 4 ? reportNotification : screen === 5 ? reportFinished : registerCard), React.createElement(Modal, {\n    isVisible: visibleModal === 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, _renderModalContent()));\n};\n\nexport default NewReportScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#E5E7E9\",\n    alignItems: \"stretch\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  headerBar: {\n    flex: 5,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderBottomLeftRadius: 15,\n    borderBottomRightRadius: 15\n  },\n  stepsCard: {\n    flex: 1,\n    backgroundColor: \"white\",\n    flexDirection: \"row\",\n    alignItems: \"stretch\",\n    justifyContent: \"center\",\n    marginHorizontal: WIDTH * 0.12,\n    borderRadius: 10,\n    marginTop: -(HEIGHT * 0.02),\n    marginBottom: HEIGHT * 0.01\n  },\n  reportsCard: {\n    flex: 14,\n    backgroundColor: \"#E5E7E9\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    marginHorizontal: WIDTH * 0.02,\n    marginBottom: HEIGHT * 0.01,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.46,\n    shadowRadius: 11.14,\n    elevation: 17\n  },\n  button: {\n    width: WIDTH * 0.3,\n    height: HEIGHT * 0.048,\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10\n  },\n  modalContent: {\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4,\n    borderColor: \"rgba(0, 0, 0, 0.1)\",\n    width: \"100%\",\n    height: HEIGHT * 0.25,\n    padding: 22\n  },\n  elementText: {\n    fontSize: HEIGHT * 0.023,\n    marginBottom: HEIGHT * 0.02,\n    alignSelf: \"center\",\n    fontWeight: \"bold\"\n  },\n  buttonText: {\n    fontSize: HEIGHT * 0.02,\n    alignSelf: \"center\",\n    color: \"white\"\n  },\n  modalButtons: {\n    flexDirection: \"row\",\n    marginTop: HEIGHT * 0.02,\n    alignSelf: \"center\",\n    width: \"90%\",\n    height: \"40%\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\"\n  }\n});","map":{"version":3,"sources":["C:/Users/geraa/Desktop/App-Servicios-Publicos/screens/NewReportScreen.js"],"names":["React","useState","NewReportHeader","NewReportType","NewReportLocation","NewReportImages","NewReportNotification","NewReportFinished","RegisterCard","ReportSteps","Modal","Dimensions","get","WIDTH","width","HEIGHT","height","NewReportScreen","navigation","screen","setScreen","visibleModal","setVisibleModal","type","setType","location","setLocation","images","setImages","user","setUser","street","street_1","street_2","references","neighborhood","address","setAddress","sendSms","setSms","sendEmail","setEmail","_renderButton","text","color","onPress","styles","button","backgroundColor","buttonText","_renderModalContent","modalContent","elementText","textAlign","modalButtons","callbackFunction","childData","reportValue","reportValue2","console","log","goBack","callbackHeader","callbackRegister","reportHeader","reportType","reportLocation","reportImages","reportNotification","reportFinished","registerCard","container","headerBar","stepsCard","reportsCard","StyleSheet","create","flex","alignItems","justifyContent","borderBottomLeftRadius","borderBottomRightRadius","flexDirection","marginHorizontal","borderRadius","marginTop","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderColor","padding","fontSize","alignSelf","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport NewReportHeader from \"../components/NewReportHeader\";\r\nimport NewReportType from \"../components/NewReportType\";\r\nimport NewReportLocation from \"../components/NewReportLocation\";\r\nimport NewReportImages from \"../components/NewReportImages\";\r\nimport NewReportNotification from \"../components/NewReportNotification\";\r\nimport NewReportFinished from \"../components/NewReportFinished\";\r\nimport RegisterCard from \"../components/RegisterCard\";\r\nimport ReportSteps from \"../components/ReportSteps\";\r\nimport Modal from \"react-native-modal\";\r\n\r\nconst { width: WIDTH, height: HEIGHT } = Dimensions.get(\"screen\");\r\n\r\nconst NewReportScreen = ({ navigation }) => {\r\n  const [screen, setScreen] = useState(1);\r\n  const [visibleModal, setVisibleModal] = useState(null);\r\n  const [type, setType] = useState(\"\");\r\n  const [location, setLocation] = useState({});\r\n  const [images, setImages] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  let [address, setAddress] = useState({\r\n    street: \"\",\r\n    street_1: \"\",\r\n    street_2: \"\",\r\n    references: \"\",\r\n    neighborhood: \"\",\r\n  });\r\n  const [sendSms, setSms] = useState(false);\r\n  const [sendEmail, setEmail] = useState(false);\r\n\r\n  let _renderButton = (text, color, onPress) => (\r\n    <TouchableOpacity onPress={onPress}>\r\n      <View style={[styles.button, { backgroundColor: color }]}>\r\n        <Text style={styles.buttonText}>{text}</Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  let _renderModalContent = () => (\r\n    <View style={styles.modalContent}>\r\n      <Text style={[styles.elementText, { textAlign: \"center\" }]}>\r\n        ¿Desea registrarse para recibir actualizaciones de este reporte?\r\n      </Text>\r\n\r\n      <View style={styles.modalButtons}>\r\n        {_renderButton(\"Aceptar\", \"rgba(0,158,227,1)\", () => {\r\n          setScreen(6);\r\n          setVisibleModal(null);\r\n        })}\r\n        {_renderButton(\"Rechazar\", \"#CCD1D1\", () => {\r\n          setScreen(5);\r\n          setVisibleModal(null);\r\n        })}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const callbackFunction = (childData, reportValue, reportValue2) => {\r\n    switch (childData) {\r\n      case 2:\r\n        setType(reportValue);\r\n        setScreen(childData);\r\n        break;\r\n      case 3:\r\n        setLocation(reportValue);\r\n        setAddress(reportValue2);\r\n        setScreen(childData);\r\n        break;\r\n      case 4:\r\n        setImages(reportValue);\r\n        if (user === null) {\r\n          setVisibleModal(1);\r\n        } else setScreen(childData);\r\n        break;\r\n      case 5:\r\n        setSms(reportValue);\r\n        setEmail(reportValue2);\r\n        console.log(\"reporte creado\");\r\n        console.log(type);\r\n        console.log(location);\r\n        console.log(address);\r\n        console.log(images);\r\n        console.log(reportValue);\r\n        console.log(reportValue2);\r\n        setScreen(childData);\r\n        break;\r\n      case 10:\r\n        navigation.goBack();\r\n        break;\r\n    }\r\n    //setScreen(childData);\r\n  };\r\n  const callbackHeader = (childData) => {\r\n    if (screen > 1) {\r\n      if (screen === 6) setScreen(3);\r\n      else {\r\n        if (screen !== 5) setScreen(screen - childData);\r\n      }\r\n    } else if (screen === 1) {\r\n      navigation.goBack();\r\n    }\r\n  };\r\n  const callbackRegister = (childData) => {\r\n    if (childData === null) setScreen(3);\r\n    else {\r\n      setUser(childData);\r\n      setScreen(4);\r\n    }\r\n  };\r\n\r\n  let reportHeader = (\r\n    <NewReportHeader parentCallback={callbackHeader} screen={screen} />\r\n  );\r\n  let reportType = (\r\n    <NewReportType parentCallback={callbackFunction} typeSelected={type} />\r\n  );\r\n  let reportLocation = (\r\n    <NewReportLocation\r\n      parentCallback={callbackFunction}\r\n      currentLocation={location}\r\n      currentAddress={address}\r\n    />\r\n  );\r\n  let reportImages = (\r\n    <NewReportImages parentCallback={callbackFunction} currentImages={images} />\r\n  );\r\n  let reportNotification = (\r\n    <NewReportNotification parentCallback={callbackFunction} />\r\n  );\r\n  let reportFinished = (\r\n    <NewReportFinished\r\n      parentCallback={callbackFunction}\r\n      title=\"Reporte creado\"\r\n      MessageHeader=\"¡Gracias por tu reporte!\"\r\n      Message=\"El reporte fue creado con exito\"\r\n      success={true}\r\n    />\r\n  );\r\n  let registerCard = <RegisterCard parentCallback={callbackRegister} />;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.headerBar}>{reportHeader}</View>\r\n\r\n      <View style={styles.stepsCard}>\r\n        <ReportSteps currentScreen={screen} />\r\n      </View>\r\n\r\n      <View style={styles.reportsCard}>\r\n        {screen === 1\r\n          ? reportType\r\n          : screen === 2\r\n          ? reportLocation\r\n          : screen === 3\r\n          ? reportImages\r\n          : screen === 4\r\n          ? reportNotification\r\n          : screen === 5\r\n          ? reportFinished\r\n          : registerCard}\r\n      </View>\r\n\r\n      <Modal isVisible={visibleModal === 1}>{_renderModalContent()}</Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default NewReportScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#E5E7E9\",\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  headerBar: {\r\n    flex: 5,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderBottomLeftRadius: 15,\r\n    borderBottomRightRadius: 15,\r\n  },\r\n  stepsCard: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"center\",\r\n    marginHorizontal: WIDTH * 0.12,\r\n    borderRadius: 10,\r\n    marginTop: -(HEIGHT * 0.02),\r\n    marginBottom: HEIGHT * 0.01,\r\n  },\r\n  reportsCard: {\r\n    flex: 14,\r\n    backgroundColor: \"#E5E7E9\",\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n    marginHorizontal: WIDTH * 0.02,\r\n    marginBottom: HEIGHT * 0.01,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 8,\r\n    },\r\n    shadowOpacity: 0.46,\r\n    shadowRadius: 11.14,\r\n    elevation: 17,\r\n  },\r\n  button: {\r\n    width: WIDTH * 0.3,\r\n    height: HEIGHT * 0.048,\r\n    borderRadius: 5,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  modalContent: {\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 4,\r\n    borderColor: \"rgba(0, 0, 0, 0.1)\",\r\n    width: \"100%\",\r\n    height: HEIGHT * 0.25,\r\n    padding: 22,\r\n  },\r\n  elementText: {\r\n    fontSize: HEIGHT * 0.023,\r\n    marginBottom: HEIGHT * 0.02,\r\n    alignSelf: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  buttonText: {\r\n    fontSize: HEIGHT * 0.02,\r\n    alignSelf: \"center\",\r\n    color: \"white\",\r\n  },\r\n  modalButtons: {\r\n    flexDirection: \"row\",\r\n    marginTop: HEIGHT * 0.02,\r\n    alignSelf: \"center\",\r\n    width: \"90%\",\r\n    height: \"40%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}