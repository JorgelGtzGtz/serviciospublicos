{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\geraa\\\\Desktop\\\\App-Servicios-Publicos\\\\components\\\\MapComponent.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport MapView from \"react-native-maps\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    WIDTH = _Dimensions$get.width,\n    HEIGHT = _Dimensions$get.height;\n\nvar MapComponent = function MapComponent(_ref) {\n  var parentCallback = _ref.parentCallback,\n      parentLocation = _ref.parentLocation;\n\n  var _useState = useState(parentLocation),\n      _useState2 = _slicedToArray(_useState, 2),\n      marker = _useState2[0],\n      setMarker = _useState2[1];\n\n  var _useState3 = useState({\n    latitude: 27.4833,\n    longitude: -109.9333,\n    latitudeDelta: 0.0922,\n    longitudeDelta: 0.0421\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapRegion = _useState4[0],\n      setMapRegion = _useState4[1];\n\n  useEffect(function () {\n    if (parentLocation !== null) {\n      setCurrentLocation(parentLocation);\n    }\n  }, []);\n\n  var sendData = function sendData(m) {\n    if (parentCallback !== null) parentCallback(m);\n  };\n\n  var setLocation = function setLocation(e) {\n    setMarker(e.nativeEvent.coordinate);\n    sendData(e.nativeEvent.coordinate);\n    setMapRegion({\n      latitude: e.nativeEvent.coordinate.latitude,\n      longitude: e.nativeEvent.coordinate.longitude,\n      latitudeDelta: 0.002,\n      longitudeDelta: 0.001\n    });\n  };\n\n  var setCurrentLocation = function setCurrentLocation() {\n    setMarker(marker);\n    sendData(marker);\n    setMapRegion({\n      latitude: parentLocation.latitude,\n      longitude: parentLocation.longitude,\n      latitudeDelta: 0.002,\n      longitudeDelta: 0.001\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.page,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    region: mapRegion,\n    onPress: setLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, marker && React.createElement(MapView.Marker, {\n    coordinate: marker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }\n  }))));\n};\n\nexport default MapComponent;\nvar styles = StyleSheet.create({\n  page: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F5FCFF\",\n    width: \"100%\",\n    height: \"40%\"\n  },\n  container: {\n    flex: 1,\n    height: \"80%\",\n    width: \"100%\",\n    backgroundColor: \"tomato\"\n  },\n  map: {\n    flex: 1,\n    alignContent: \"flex-start\"\n  },\n  gpsButton: {\n    backgroundColor: \"#006A99\",\n    width: \"60%\",\n    height: HEIGHT * 0.048,\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: WIDTH * 0.02,\n    flexDirection: \"row\"\n  },\n  buttonText: {\n    fontSize: HEIGHT * 0.02,\n    alignSelf: \"center\",\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/geraa/Desktop/App-Servicios-Publicos/components/MapComponent.js"],"names":["React","useState","useEffect","MapView","Dimensions","get","WIDTH","width","HEIGHT","height","MapComponent","parentCallback","parentLocation","marker","setMarker","latitude","longitude","latitudeDelta","longitudeDelta","mapRegion","setMapRegion","setCurrentLocation","sendData","m","setLocation","e","nativeEvent","coordinate","styles","page","container","map","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","alignContent","gpsButton","borderRadius","marginBottom","flexDirection","buttonText","fontSize","alignSelf","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Text,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport MapView from \"react-native-maps\";\r\nconst { width: WIDTH, height: HEIGHT } = Dimensions.get(\"screen\");\r\n\r\nconst MapComponent = ({ parentCallback, parentLocation }) => {\r\n  const [marker, setMarker] = useState(parentLocation);\r\n  const [mapRegion, setMapRegion] = useState({\r\n    latitude: 27.4833,\r\n    longitude: -109.9333,\r\n    latitudeDelta: 0.0922,\r\n    longitudeDelta: 0.0421,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (parentLocation !== null) {\r\n      setCurrentLocation(parentLocation);\r\n    }\r\n  }, []);\r\n\r\n  const sendData = (m) => {\r\n    if (parentCallback !== null) parentCallback(m);\r\n  };\r\n\r\n  const setLocation = (e) => {\r\n    setMarker(e.nativeEvent.coordinate);\r\n    sendData(e.nativeEvent.coordinate);\r\n    setMapRegion({\r\n      latitude: e.nativeEvent.coordinate.latitude,\r\n      longitude: e.nativeEvent.coordinate.longitude,\r\n      latitudeDelta: 0.002,\r\n      longitudeDelta: 0.001,\r\n    });\r\n  };\r\n\r\n  const setCurrentLocation = () => {\r\n    setMarker(marker);\r\n    sendData(marker);\r\n    setMapRegion({\r\n      latitude: parentLocation.latitude,\r\n      longitude: parentLocation.longitude,\r\n      latitudeDelta: 0.002,\r\n      longitudeDelta: 0.001,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.page}>\r\n      <View style={styles.container}>\r\n        <MapView style={styles.map} region={mapRegion} onPress={setLocation}>\r\n          {marker && <MapView.Marker coordinate={marker} />}\r\n        </MapView>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#F5FCFF\",\r\n    width: \"100%\",\r\n    height: \"40%\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    height: \"80%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"tomato\",\r\n  },\r\n  map: {\r\n    flex: 1,\r\n    alignContent: \"flex-start\",\r\n  },\r\n  gpsButton: {\r\n    backgroundColor: \"#006A99\",\r\n    width: \"60%\",\r\n    height: HEIGHT * 0.048,\r\n    borderRadius: 5,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginBottom: WIDTH * 0.02,\r\n    flexDirection: \"row\",\r\n  },\r\n  buttonText: {\r\n    fontSize: HEIGHT * 0.02,\r\n    alignSelf: \"center\",\r\n    color: \"white\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}